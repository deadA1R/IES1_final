C51 COMPILER V9.60.7.0   FINAL_PROJECT                                                     11/12/2023 12:40:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE FINAL_PROJECT
OBJECT MODULE PLACED IN .\Objects\final_project.obj
COMPILER INVOKED BY: D:\Keli\C51\BIN\C51.EXE final_project.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\final_project.lst) TABS(2) OBJECT(.\Objects\final_project.obj)

line level    source

   1                              // Final Project 
   2                              // CS-2117
   3                              // Dias Amangeldy, Ilya Rogov, Beybarys Rysbek all from CS-2117
   4          
   5          #include <reg51.h> // Connecting the library for working with 8051 microcontrollers
   6          
   7          unsigned char floor; // Variable for storing the current floor
   8          unsigned char targetFloor = 0; // Variable for storing the target floor
   9          unsigned char buttonsOnFloors = 0; // Variable for storing the status of call buttons on floors
  10          unsigned char buttonsInElevator = 0; // Variable for storing the status of call buttons in elevator
  11          
  12          // Array, for displaying values from 1 to 8 on a 7-segment display
  13          unsigned char displayValues[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80};
  14          
  15          // Method for moving between floors
  16          void moveElevator() {
  17   1          if (floor < targetFloor) { // If the current floor is lower than the target one, the one we want to ge
             -t to
  18   2              floor++; // Moving up one floor
  19   2          } else if (floor > targetFloor) { // If the current floor is larger than the target one, the one we wa
             -nt to get to
  20   2              floor--; // Moving down one floor
  21   2          }
  22   1          targetFloor = floor; // We save the current floor as a standard value so that the elevator remains on 
             -this floor
  23   1      }
  24          
  25          // Method for checking which button was pressed
  26          void checkButtons(unsigned char button){
  27   1         unsigned char i; // Variable i for loop
  28   1          for (i = 0; i < 8; i++) { // Check each button
  29   2              if ((button & (1 << i)) != 0) { // If the call button is pressed
  30   3                  targetFloor = i; // Setting the target floor to which the elevator will be moved
  31   3                  break; // Break the IF operation and exit the method
  32   3              }
  33   2          }
  34   1      }
  35          
  36          // The main method, the program starts working here
  37          void main (void) {
  38   1          while(1) { // Infinite Loop
  39   2              buttonsInElevator = P1; // Reading the status of the buttons inside the elevator
  40   2              buttonsOnFloors = P3; // Reading the status of the call buttons on the floors
  41   2              if (floor == targetFloor) { // If the elevator is on the target floor
  42   3                  checkButtons(buttonsInElevator); // Checking the call buttons in the elevator, calling the method
  43   3                  checkButtons(buttonsOnFloors); // Checking the call buttons on the floors, calling the method
  44   3              }
  45   2              moveElevator(); // Moving the elevator
  46   2              P0 = displayValues[floor + 1];  // Displaying the current floor on a 7-segment display
  47   2              P2 = 1 << floor; // Lights the corresponding light bulb
  48   2          }
  49   1      }


C51 COMPILER V9.60.7.0   FINAL_PROJECT                                                     11/12/2023 12:40:16 PAGE 2   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
